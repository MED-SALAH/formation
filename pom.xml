<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.test</groupId>
	<artifactId>spark-wiki-extracts</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<modules>
		<module>producer</module>
		<module>consumer</module>
	</modules>
	<packaging>pom</packaging>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.resources.sourceEncoding>UTF-8</project.resources.sourceEncoding>
		<scresourcesala.version>2.11</scresourcesala.version>
		<scala-library.version>2.11.8</scala-library.version>
		<scala.version>2.11</scala.version>
		<spark.version>2.4.4</spark.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<project.scm.id>DH_BETA_Git</project.scm.id>
		<scala.version>2.11</scala.version>
		<scala.version.full>${scala.version}.8</scala.version.full>
		<akka.version>2.5.7</akka.version>
		<kafka.version>1.0.0</kafka.version>
		<cucumber.version>2.1.0</cucumber.version>
		<avro4s.version>1.8.0</avro4s.version>
		<encoding>UTF-8</encoding>
		<jackson.version>2.8.1</jackson.version>
		<maven.jar.plugin.version>3.0.2</maven.jar.plugin.version>
		<flink.version>1.4.0</flink.version>
		<confluent.version>4.0.0</confluent.version>
		<skip.tests.it>false</skip.tests.it>
		<hadoop-common.version>2.7.1</hadoop-common.version>
		<scopt.version>3.3.0</scopt.version>
		<kafka.avro.version>3.2.0</kafka.avro.version>
		<apache.http.version>4.5.4</apache.http.version>
		<apache.common.version>3.7</apache.common.version>
		<mockito.version>2.13.1</mockito.version>
		<mock.http.version>4.1</mock.http.version>
		<scalatest>2.2.6</scalatest>
		<typesafe.version>1.2.1</typesafe.version>
		<json4s.version>3.6.6</json4s.version>
		<confluent.maven.repo>http://packages.confluent.io/maven/</confluent.maven.repo>
	</properties>

	<build>

		<sourceDirectory>src/main/scala</sourceDirectory>
		<testSourceDirectory>src/test/scala</testSourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/test/resources</directory>
			</resource>
		</resources>

		<pluginManagement>
			<plugins>
				<!-- Configure maven-compiler-plugin to use the desired Java version -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
				+	<version>3.8.0</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
						<verbose>true</verbose>
					</configuration>
				</plugin>

				<!-- Use build-helper-maven-plugin to add Scala source and test source directories -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.0.0</version>
					<executions>
						<execution>
							<id>add-source</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>src/main/scala</source>
								</sources>
							</configuration>
						</execution>
						<execution>
							<id>add-test-source</id>
							<phase>generate-test-sources</phase>
							<goals>
								<goal>add-test-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>src/test/scala</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- Use scala-maven-plugin for Scala support -->
				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<version>3.2.2</version>
					<configuration>
						<recompileMode>incremental</recompileMode>
					</configuration>
					<executions>
						<execution>
							<id>compile</id>
							<goals>
								<goal>compile</goal>
							</goals>
							<phase>compile</phase>
						</execution>
						<execution>
							<id>test-compile</id>
							<goals>
								<goal>testCompile</goal>
							</goals>
							<phase>test-compile</phase>
						</execution>
						<execution>
							<phase>process-resources</phase>
							<goals>
								<goal>compile</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- disable surefire -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.7</version>
					<configuration>
						<environmentVariables>
							<HADOOP_USER_NAME>root</HADOOP_USER_NAME>
						</environmentVariables>
						<includes>
							<exclude>**/*BDDTest.java</exclude>
						</includes>
					</configuration>
					<executions>
						<execution>
							<id>default-test</id>
							<phase>test</phase>
							<goals>
								<goal>test</goal>
							</goals>
						</execution>
					</executions>
				</plugin>



				<!-- enable scalatest -->
				<plugin>
					<groupId>org.scalatest</groupId>
					<artifactId>scalatest-maven-plugin</artifactId>
					<version>2.0.0</version>
					<configuration>
						<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
						<junitxml>.</junitxml>
						<filereports>WDF TestSuite.txt</filereports>
					</configuration>
					<executions>
						<execution>
							<id>test</id>
							<goals>
								<goal>test</goal>
							</goals>
							<configuration>
								<suffixes>(?&lt;!Integration)(Test)</suffixes>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.12</version>
					<executions>
						<execution>
							<id>integration-test</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>


	<dependencies>

		<!-- https://mvnrepository.com/artifact/com.datastax.spark/spark-cassandra-connector -->
		<dependency>
			<groupId>com.datastax.spark</groupId>
			<artifactId>spark-cassandra-connector_2.11</artifactId>
			<version>2.4.1</version>
			<exclusions>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>netty-all</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala-library.version}</version>
		</dependency>
		<!-- spark -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_${scala.version}</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_${scala.version}</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<dependency>
			<groupId>com.databricks</groupId>
			<artifactId>spark-avro_${scala.version}</artifactId>
			<version>4.0.0</version>
		</dependency>
		<!-- utils -->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.11.2</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
			<version>2.6.7</version>
		</dependency>
		<!-- test -->
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.version}</artifactId>
			<version>3.0.5</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>